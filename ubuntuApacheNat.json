{
  "$schema":"http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "location": {
      "type": "string",
      "allowedValues": [
        "East US",
        "West US",
        "Central US",
        "South Central US",
        "East US 2",
        "North Europe",
        "West Europe",
        "Southeast Asia",
        "East Asia",
        "Japan West",
        "Japan East"
      ],
      "metadata": {
        "description": "Azure region where all resources will be deployed"
      }
    },
    "vmSku": {
      "type": "string",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7"
      ],
      "defaultValue": "Standard_A1"
    },
    "uniqueNamingSubstring":{
      "type":"string",
      "metadata":{
        "description":"String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)String used as a base for naming resources (9 characters or less)"
      },
      "maxLength": 9
    },
    "instanceCount":{
      "type":"int",
      "metadata":{
        "description":"Number of VM instances (100 or less)"
      },
      "maxValue": 100
    },
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"Admin username on all VM's"
      }
    },
    "adminPassword":{
      "type":"securestring",
      "metadata":{
        "description":"Admin password on all VM's"
      }
    }
  },
  "variables":{
    "apiVersion": "2015-06-15",
    "newStorageAccountSuffix":"[concat(parameters('uniqueNamingSubstring'), 'sa')]",
    "addressPrefix":"10.0.0.0/16",
    "subnetPrefix":"10.0.0.0/24",
    "storageAccountType":"Standard_LRS",
    "virtualNetworkName":"[concat(parameters('uniqueNamingSubstring'), 'vnet')]",
    "publicIPAddressName":"[concat(parameters('uniqueNamingSubstring'), 'pip')]",
    "subnetName":"[concat(parameters('uniqueNamingSubstring'), 'subnet')]",
    "loadBalancerName":"[concat(parameters('uniqueNamingSubstring'), 'lb')]",
    "publicIPAddressID":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbID":"[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[concat(parameters('uniqueNamingSubstring'), 'natpool')]",
    "bePoolName": "[concat(parameters('uniqueNamingSubstring'), 'bepool')]",
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 22,
    "nicName":"[concat(parameters('uniqueNamingSubstring'), 'nic')]",
    "ipConfigName":"[concat(parameters('uniqueNamingSubstring'), 'ipconfig')]",
    "frontEndIPConfigID":"[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "osType":{
      "publisher":"Canonical",
      "offer":"UbuntuServer",
      "sku":"15.04",
      "version":"latest"
    },
    "imageReference":"[variables('osType')]"
  },
  "resources":[
    {
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[variables('virtualNetworkName')]",
      "location":"[parameters('location')]",
      "apiVersion":"[variables('apiVersion')]",
      "properties":{
        "addressSpace":{
          "addressPrefixes":[
            "[variables('addressPrefix')]"
          ]
        },
        "subnets":[
          {
            "name":"[variables('subnetName')]",
            "properties":{
              "addressPrefix":"[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), copyIndex())), variables('newStorageAccountSuffix'))]",
      "location":"[parameters('location')]",
      "apiVersion":"[variables('apiVersion')]",
      "copy":{
        "name":"storageLoop",
        "count":5
      },
      "properties":{
        "accountType":"[variables('storageAccountType')]"
      }
    },
    {
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('publicIPAddressName')]",
      "location":"[parameters('location')]",
      "apiVersion":"[variables('apiVersion')]",
      "properties":{
        "publicIPAllocationMethod":"Dynamic",
        "dnsSettings":{
          "domainNameLabel":"[parameters('uniqueNamingSubstring')]"
        }
      }
    },
    {
      "type":"Microsoft.Network/loadBalancers",
      "name":"[variables('loadBalancerName')]",
      "location":"[resourceGroup().location]",
      "apiVersion":"[variables('apiVersion')]",
      "dependsOn":[
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties":{
        "frontendIPConfigurations":[
          {
            "name":"LoadBalancerFrontEnd",
            "properties":{
              "publicIPAddress":{
                "id":"[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools":[
          {
            "name":"[variables('bePoolName')]"
          }
        ],
        "inboundNatPools":[
          {
            "name":"[variables('natPoolName')]",
            "properties":{
              "frontendIPConfiguration":{
                "id":"[variables('frontEndIPConfigID')]"
              },
              "protocol":"tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ]
      }
    },
    {
      "type":"Microsoft.Compute/virtualMachineScaleSets",
      "name":"[parameters('uniqueNamingSubstring')]",
      "location":"[parameters('location')]",
      "apiVersion":"[variables('apiVersion')]",
      "dependsOn":[
        "[concat('Microsoft.Storage/storageAccounts/', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '0')), variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '1')), variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '2')), variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '3')), variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '4')), variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku":{
        "name":"[parameters('vmSku')]",
        "tier":"Standard",
        "capacity":"[parameters('instanceCount')]"
      },
      "properties":{
        "upgradePolicy":{
          "mode":"Automatic"
        },
        "virtualMachineProfile":{
          "storageProfile":{
            "osDisk":{
              "vhdContainers":[
                "[concat('https://', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '0')), variables('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
                "[concat('https://', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '1')), variables('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
                "[concat('https://', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '2')), variables('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
                "[concat('https://', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '3')), variables('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
                "[concat('https://', uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '4')), variables('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]"
              ],
              "name":"vmssosdisk",
              "caching":"ReadOnly",
              "createOption":"FromImage"
            },
            "imageReference":"[variables('imageReference')]"
          },
          "osProfile":{
            "computerNamePrefix":"[parameters('uniqueNamingSubstring')]",
            "adminUsername":"[parameters('adminUsername')]",
            "adminPassword":"[parameters('adminPassword')]"
          },
          "networkProfile":{
            "networkInterfaceConfigurations":[
              {
                "name":"[variables('nicName')]",
                "properties":{
                  "primary":"true",
                  "ipConfigurations":[
                    {
                      "name":"[variables('ipConfigName')]",
                      "properties":{
                        "subnet":{
                          "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools":[
                          {
                            "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools":[
                          {
                            "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ]
}
